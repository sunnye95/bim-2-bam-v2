{
  "version": 3,
  "sources": ["../../node_modules/@arc-web/components/dist/components/card/arc-card.styles.js", "../../node_modules/@arc-web/components/dist/components/card/ArcCard.js", "../../node_modules/@arc-web/components/dist/components/card/arc-card.js"],
  "sourcesContent": ["import { css } from 'lit';\nimport componentStyles from '../../styles/component.styles.js';\nexport default [\n    componentStyles,\n    css `\n    :host {\n      display: inline-block;\n      width: auto;\n    }\n\n    .card {\n      height: 100%;\n      display: grid;\n      overflow: hidden;\n      background-color: rgb(var(--arc-container-color));\n      box-shadow: var(--arc-box-shadow);\n    }\n\n    /* Hide elements when they are not slotted or when the card is collapsed */\n    .card:not(.card--has-header) #header,\n    .card:not(.card--has-image) #image,\n    .card:not(.card--has-body) #body,\n    .card:not(.card--has-footer) #footer {\n      display: none;\n    }\n\n    #header,\n    #body,\n    #footer {\n      padding: var(--arc-spacing-normal);\n    }\n\n    #image {\n      overflow: hidden;\n    }\n\n    #header ::slotted(*),\n    #footer ::slotted(*) {\n      display: grid;\n      align-items: center;\n      grid-auto-flow: column;\n      gap: var(--arc-spacing-small);\n    }\n\n    #header ::slotted(*) {\n      justify-content: space-between;\n    }\n\n    #footer ::slotted(*) {\n      justify-content: end;\n    }\n  `,\n];\n", "import { __decorate } from \"tslib\";\nimport { html, LitElement } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { HasSlotController } from '../../internal/slot.js';\nimport { watch } from '../../internal/watch.js';\nimport { getAnimation, setDefaultAnimation, startAnimations, stopAnimations, shimKeyframesHeightAuto, } from '../../internal/animate.js';\nimport { emit, waitForEvent } from '../../internal/event.js';\nimport { ARC_EVENTS } from '../../internal/constants/eventConstants.js';\nimport { ARC_ANIMATION_OPTIONS } from '../../internal/constants/animationConstants.js';\nimport styles from './arc-card.styles.js';\nexport default class ArcCard extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.hasSlotController = new HasSlotController(this, 'header', 'image', '[default]', 'footer');\n        this.collapsed = false;\n    }\n    async handleCollapsedChange() {\n        if (!this.collapsed) {\n            emit(this, ARC_EVENTS.show);\n            await stopAnimations(this);\n            this.content.hidden = false;\n            const cardAnimation = getAnimation(this, 'card.expand');\n            await startAnimations(this.content, shimKeyframesHeightAuto(cardAnimation.keyframes, this.content.scrollHeight), cardAnimation.options);\n            this.content.style.height = 'auto';\n            emit(this, ARC_EVENTS.afterShow);\n        }\n        else {\n            if (!this.hasSlotController.test('header')) {\n                return;\n            }\n            emit(this, ARC_EVENTS.hide);\n            await stopAnimations(this);\n            const { keyframes, options } = getAnimation(this, 'card.collapse');\n            await startAnimations(this.content, shimKeyframesHeightAuto(keyframes, this.content.scrollHeight), options);\n            this.content.hidden = true;\n            this.content.style.height = 'auto';\n            emit(this, ARC_EVENTS.afterHide);\n        }\n    }\n    firstUpdated() {\n        if (!this.hasSlotController.test('header')) {\n            return;\n        }\n        this.content.hidden = this.collapsed;\n    }\n    async expand() {\n        if (!this.collapsed) {\n            return undefined;\n        }\n        this.collapsed = false;\n        return waitForEvent(this, ARC_EVENTS.afterShow);\n    }\n    async collapse() {\n        if (this.collapsed || !this.hasSlotController.test('header')) {\n            return undefined;\n        }\n        this.collapsed = true;\n        return waitForEvent(this, ARC_EVENTS.afterHide);\n    }\n    render() {\n        return html `\n      <article\n        id=\"main\"\n        class=${classMap({\n            card: true,\n            'card--has-header': this.hasSlotController.test('header'),\n            'card--has-image': this.hasSlotController.test('image'),\n            'card--has-body': this.hasSlotController.test('[default]'),\n            'card--has-footer': this.hasSlotController.test('footer'),\n        })}\n      >\n        <header id=\"header\">\n          <slot name=\"header\"></slot>\n        </header>\n        <div id=\"content\">\n          <div id=\"image\">\n            <slot name=\"image\"></slot>\n          </div>\n          <div id=\"body\">\n            <slot></slot>\n          </div>\n          <footer id=\"footer\">\n            <slot name=\"footer\"></slot>\n          </footer>\n        </div>\n      </article>\n    `;\n    }\n}\nArcCard.tag = 'arc-card';\nArcCard.styles = styles;\n__decorate([\n    query('#content')\n], ArcCard.prototype, \"content\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ArcCard.prototype, \"collapsed\", void 0);\n__decorate([\n    watch('collapsed', { waitUntilFirstUpdate: true })\n], ArcCard.prototype, \"handleCollapsedChange\", null);\nsetDefaultAnimation('card.expand', {\n    keyframes: [\n        { height: '0', opacity: '0' },\n        { height: 'auto', opacity: '1' },\n    ],\n    options: ARC_ANIMATION_OPTIONS.slow,\n});\nsetDefaultAnimation('card.collapse', {\n    keyframes: [\n        { height: 'auto', opacity: '1' },\n        { height: '0', opacity: '0' },\n    ],\n    options: ARC_ANIMATION_OPTIONS.slow,\n});\n", "import ArcCard from './ArcCard.js';\ncustomElements.define('arc-card', ArcCard);\n"],
  "mappings": "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",
  "names": []
}
